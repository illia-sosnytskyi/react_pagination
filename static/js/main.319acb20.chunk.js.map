{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","currentPage","itemsPerPage","changeCountOfPages","goNext","goPrev","onSetPage","className","cn","disabled","href","onClick","map","page","active","length","items","from","to","numbers","n","push","getNumbers","App","useState","setPage","setItemsPerPage","elements","startItemPerPage","visibleItems","splice","id","value","onChange","e","target","htmlFor","countOfItems","pages","countOfPages","Math","ceil","i","item","ReactDOM","render","document","getElementById"],"mappings":"2NAWaA,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,YACAC,EAKI,EALJA,aACAC,EAII,EAJJA,mBACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,OACAC,EACI,EADJA,UAEA,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAA0B,IAAhBR,IADZ,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACX,OACA,QACJU,QAAS,WACa,IAAhBV,GACFI,KATN,oBAkBAF,EAAmBD,GAAcU,KAAI,SAAAC,GAAI,OACvC,oBACEN,UAAWC,IAAG,YAAa,CACzBM,OAAQD,IAASZ,IAFrB,SAME,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAML,EAAUO,IAJ3B,SAMGA,KAREA,MAaX,oBAAIN,UAAWC,IAAG,YAAa,CAC7BC,SAAUR,IAAgBE,EAAmBD,GAAca,SAD7D,SAIE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAAmBD,GAAca,OAC5D,OACA,QACJJ,QAAS,WACHV,IAAgBE,EAAmBD,GAAca,QACnDX,KATN,wBC3DFY,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBV,KAAI,SAAAQ,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOX,EAAP,KAAaY,EAAb,KACA,EAAwCD,mBAAS,GAAjD,mBAAOtB,EAAP,KAAqBwB,EAArB,KACA,EAAmBF,mBAASR,GAArBW,EAAP,oBAyBMC,GAAoBf,EAAO,GAAKX,EAChC2B,EAAe,YAAIF,GAAUG,OAAOF,EAAkB1B,GACtDe,EAAOW,EAAmB,EAC1BV,EAAKU,EAAmB1B,EAE9B,OACE,sBAAKK,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWM,EADX,mBAC0BI,EAD1B,cACoCC,EAAK,GAAK,GAAKA,EADnD,aAIA,sBAAKX,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAO9B,EACP+B,SAAU,SAACC,GACTR,GAAiBQ,EAAEC,OAAOH,OAC1BP,EAAQ,IAPZ,UAUE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAOF,cAAC,EAAD,CACEN,YAAaY,EACbV,mBAhEqB,SAACkC,GAI1B,IAHA,IAAMC,EAAQ,GACRC,EAAeC,KAAKC,KAAK,GAAKJ,GAE3BK,EAAI,EAAGA,EAAIH,EAAcG,GAAK,EACrCJ,EAAMjB,KAAKqB,EAAI,GAGjB,OAAOJ,GAyDHpC,aAAcA,EACdE,OAvDS,WACbqB,GAAQ,SAAAxB,GAAW,OAAIA,EAAc,MAuDjCI,OApDS,WACboB,GAAQ,SAAAxB,GAAW,OAAIA,EAAc,MAoDjCK,UAjDY,SAACL,GACjBwB,EAAQxB,MAmDN,6BACG4B,EAAajB,KAAI,SAAA+B,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YEpFnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.319acb20.chunk.js","sourcesContent":["import cn from 'classnames';\n\ntype Props = {\n  currentPage: number;\n  itemsPerPage: number;\n  changeCountOfPages: (itemsPerPage: number) => number[];\n  goNext: () => void;\n  goPrev: () => void;\n  onSetPage: (currentPage: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  itemsPerPage,\n  changeCountOfPages,\n  goNext,\n  goPrev,\n  onSetPage,\n}) => {\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1\n            ? 'true'\n            : 'false'}\n          onClick={() => {\n            if (currentPage !== 1) {\n              goPrev();\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {\n        changeCountOfPages(itemsPerPage).map(page => (\n          <li\n            className={cn('page-item', {\n              active: page === currentPage,\n            })}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onSetPage(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))\n      }\n      <li className={cn('page-item', {\n        disabled: currentPage === changeCountOfPages(itemsPerPage).length,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === changeCountOfPages(itemsPerPage).length\n            ? 'true'\n            : 'false'}\n          onClick={() => {\n            if (currentPage !== changeCountOfPages(itemsPerPage).length) {\n              goNext();\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [elements] = useState(items);\n\n  const changeCountOfPages = (countOfItems: number) => {\n    const pages = [];\n    const countOfPages = Math.ceil(42 / countOfItems);\n\n    for (let i = 0; i < countOfPages; i += 1) {\n      pages.push(i + 1);\n    }\n\n    return pages;\n  };\n\n  const goNext = () => {\n    setPage(currentPage => currentPage + 1);\n  };\n\n  const goPrev = () => {\n    setPage(currentPage => currentPage - 1);\n  };\n\n  const onSetPage = (currentPage: number) => {\n    setPage(currentPage);\n  };\n\n  const startItemPerPage = (page - 1) * itemsPerPage;\n  const visibleItems = [...elements].splice(startItemPerPage, itemsPerPage);\n  const from = startItemPerPage + 1;\n  const to = startItemPerPage + itemsPerPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${from} - ${to > 42 ? 42 : to} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(e) => {\n              setItemsPerPage(+e.target.value);\n              setPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n\n      <Pagination\n        currentPage={page}\n        changeCountOfPages={changeCountOfPages}\n        itemsPerPage={itemsPerPage}\n        goNext={goNext}\n        goPrev={goPrev}\n        onSetPage={onSetPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}